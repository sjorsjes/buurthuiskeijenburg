---
import truncate from 'lodash.truncate';

export type FacebookPost = {
  id: string;
  created_time: string;
  picture?: string;
  full_picture?: string;
  message?: string;
}

export type FacebookResponse = {
    data: FacebookPost[];
    paging: {
        cursors: {
            before: string;
            after: string;
        },
        next: string;
    }
}
const { FACEBOOK_APP_ID, FACEBOOK_ACCESS_TOKEN, FACEBOOK_POST_LIMIT } = import.meta.env;
const facebookPosts: FacebookResponse = await fetch(`https://graph.facebook.com/v7.0/${FACEBOOK_APP_ID}/feed?fields=id%2Cpicture%2Cfull_picture%2Ccreated_time%2Cmessage&limit=${FACEBOOK_POST_LIMIT}&access_token=${FACEBOOK_ACCESS_TOKEN}`)
		.then(res => res.json());
---

{
	facebookPosts.data
	?
		<div class="facebook">
			<div class="container">
				<h1 class="text-center">Facebook</h1>

				<div class="facebook__container">
					{facebookPosts.data.map((post) => (
						<div class:list={[ 'facebook__post', { 'facebook__post--image': post.full_picture } ]}>
							<a href={ `https://www.facebook.com/${post.id}` } class="facebook__post-link">
								<span class="facebook__post-link__text">
									Bekijk het bericht…
								</span>
							</a>

							{
								post.full_picture
								? <div class="facebook__post-visual">
									<img src={post.full_picture} alt="" />
								</div>
								: ''
							}

							<div class="facebook__post-body">
								<small class="facebook__post-date">
									{new Date(post.created_time).toLocaleDateString('nl-NL', { year: 'numeric', month: 'short', day: 'numeric' })}
								</small>

								<div class="facebook__post-content">
									{
										post.full_picture
										? truncate(post.message, { length: 225, omission: '…' })
										: truncate(post.message, { length: 500, omission: '…' })
									}
								</div>
							</div>
						</div>
					))}
				</div>

				<div class="text-center">
					<a href="https://www.facebook.com/buurthuiskeijenburg" class="btn btn--facebook">
						Bekijk alle berichten
					</a>
				</div>
			</div>
		</div>
	: ''
}

<style>
	.facebook {
		padding: 1rem 0 2rem;

		background: var(--color-gray-light);
		border-bottom: 4px solid var(--color-white);
	}

	.facebook__container {
		display: flex;
		flex-wrap: wrap;

		margin-bottom: 1rem;
	}

	.facebook__post-body {
		position: relative;
		grid-row: 1/3;

		height: 100%;

		padding: 0.75rem 1rem;

		background-color: var(--color-white);
		border-radius: var(--radius-large);
	}

	.facebook__post-content {
		overflow: hidden;

		word-break: break-word;
	}

	.facebook__post {
		position: relative;

		overflow: hidden; /* for IE */

		width: 100%;
		max-height: 350px; /* for IE */

		margin: 1rem 0;

		&--image {
			display: grid;
			grid-template-rows: 150px auto;

			.facebook__post-body {
				grid-row: 2/3;

				border-radius: 0 0 var(--radius-large) var(--radius-large);
			}
		}
	}

	.facebook__post-visual {
		position: relative;

		grid-row: 1/2;

		&:after {
			display: block;

			padding-bottom: 100%;

			content: '';
		}

		img {
			position: absolute;

			width: 100%;
			height: 100%;

			object-fit: cover;

			border-radius: var(--radius-large) var(--radius-large) 0 0;
		}
	}

	.facebook__post-date {
		display: block;
	}

	.facebook__post-link__text {
		position: absolute;
		top: 50%;
		left: 50%;

		display: none;

		transform: translate(-50%, -50%);
	}

	.facebook__post-link {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;

		z-index: 9999;

		border-radius: var(--radius-large);

		&:hover {
			color: var(--color-white);
			text-decoration: none;
			text-align: center;
			font-weight: bold;

			background-color: var(--color-facebookRGBA);
			border: 1px solid var(--color-facebook-border);

			.facebook__post-link__text {
				display: block;
			}
		}
	}

	@media (min-width: 45rem) {
		.facebook__post {
			width: calc(50% - 2rem);
			margin: 1rem;
		}
	}

	@media (min-width: 62rem) {
		.facebook {
			padding: 2rem;
		}

		.facebook__post {
			&--image {
				grid-template-columns: 50% 50%;
				grid-template-rows: auto;

				.facebook__post-body {
					grid-row: 1;
					grid-column: 2/3;

					border-radius: 0 var(--radius-large) var(--radius-large) 0;
				}
			}
		}

		.facebook__post-visual {
			grid-row: 1;
			grid-column: 1/2;

			img {
				border-radius: var(--radius-large) 0 0 var(--radius-large);
			}
		}
	}
</style>
